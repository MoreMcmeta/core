/*
 * MoreMcmeta is a Minecraft mod expanding texture animation capabilities.
 * Copyright (C) 2021 soir20
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id "architectury-plugin" version "3.1-SNAPSHOT"
    id "dev.architectury.loom" version "0.7.2-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraftVersion
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    task signJar() {
        doLast {
            if (project.hasProperty("keyStore")) {
                ant.signjar(
                        jar: remapJar.getArchiveFile().get().getAsFile().path,
                        keystore: project.keyStore,
                        alias: project.keyStoreAlias,
                        storepass: project.keyStorePass,
                        keypass: project.keyStoreKeyPass
                )
            }
        }
    }

    build.dependsOn(signJar)

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraftVersion}"
        mappings loom.officialMojangMappings()

        testImplementation "junit:junit:${rootProject.junitVersion}"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    version = "${rootProject.minecraftVersion}-${rootProject.modVersion}"
    group = rootProject.mavenGroup
    archivesBaseName = rootProject.modArchivesBaseName

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release.set(targetVersion)
        }
    }

    java {
        withSourcesJar()
    }
}